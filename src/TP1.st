Object subclass: #AlgoRemis	instanceVariableNames: 'choferes destinos'	classVariableNames: ''	package: 'TP1'!!AlgoRemis methodsFor: 'DS' stamp: 'ds 10/9/2021 13:31'!crearViajeConDestino: unDestinoNombre aKms: unKilometraje peajes: unaCantiadPasajes 	destinos add: (Destino destino: unDestinoNombre distancia: unKilometraje peajes: unaCantiadPasajes ).! !!AlgoRemis methodsFor: 'DiegoT' stamp: 'ds 10/9/2021 18:17'!viajeMasBaratoParaDestino: unDestino 	| viajesPorChofer destino |	destino := self buscarDestinoPorNombre: unDestino.	viajesPorChofer := choferes collect: [ :c | Viaje hacia: destino con: c].	^viajesPorChofer min.! !!AlgoRemis methodsFor: 'as yet unclassified' stamp: 'ds 10/9/2021 13:36'!registrarChoferDeAutoElectrico: unChofer conTarifaInicial: unaTarifa	choferes add: (ChoferElectrico nombre: unChofer cobra: unaTarifa)! !!AlgoRemis methodsFor: 'as yet unclassified' stamp: 'ds 10/9/2021 13:36'!registrarChoferDeAuto: unChofer conTarifaInicial: unaTarifa	choferes add: (ChoferComun nombre: unChofer cobra: unaTarifa)! !!AlgoRemis methodsFor: 'as yet unclassified' stamp: 'ds 10/9/2021 18:47'!buscarDestinoPorNombre: unDestinoNombre 	^destinos detect: [ :d | d seLlama: unDestinoNombre ]! !!AlgoRemis methodsFor: 'initialization' stamp: 'ds 10/9/2021 13:19'!initialize 	choferes := OrderedCollection new.	destinos := OrderedCollection new.! !Object subclass: #Chofer	instanceVariableNames: 'tarifa pesosPorKilometro costoUnPeaje nombre'	classVariableNames: ''	package: 'TP1'!!Chofer methodsFor: 'as yet unclassified' stamp: 'ds 10/11/2021 12:47'!nombre: unNombre cobra: unaTarifa 	nombre := unNombre .	tarifa := unaTarifa .! !!Chofer methodsFor: 'as yet unclassified' stamp: 'ds 10/11/2021 12:48'!cobraHasta: aDestino 	^ tarifa + (aDestino costoPorDistancia: pesosPorKilometro )! !!Chofer methodsFor: 'accessing - computed' stamp: 'ds 10/11/2021 12:49'!costoPeajeCon: unosPeajes 	^unosPeajes * costoUnPeaje! !!Chofer methodsFor: 'accessing' stamp: 'ds 10/11/2021 12:49'!nombre	^ nombre! !Chofer subclass: #ChoferComun	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!ChoferComun methodsFor: 'as yet unclassified' stamp: 'ds 10/9/2021 18:36'!initialize 	tarifa := 450.	pesosPorKilometro := 50.	costoUnPeaje := 100! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ChoferComun class	instanceVariableNames: ''!!ChoferComun class methodsFor: 'as yet unclassified' stamp: 'ds 10/9/2021 13:01'!nombre: unNombre cobra: unaTarifa 	|result|	result := self new.	result nombre: unNombre cobra: unaTarifa.	^result. ! !Chofer subclass: #ChoferElectrico	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!ChoferElectrico methodsFor: 'initialization' stamp: 'ds 10/11/2021 12:51'!initialize 	tarifa := 200.	pesosPorKilometro := 30.	costoUnPeaje := 50! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ChoferElectrico class	instanceVariableNames: ''!!ChoferElectrico class methodsFor: 'as yet unclassified' stamp: 'ds 10/11/2021 12:51'!nombre: unNombre cobra: unaTarifa 	|result|	result := self new.	result nombre: unNombre cobra: unaTarifa.	^result. ! !Object subclass: #DescuentoHospital	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!DescuentoHospital methodsFor: 'as yet unclassified' stamp: 'ds 10/9/2021 18:18'!aplicarDto: unValor 	^0.2 * unValor ! !Object subclass: #Destino	instanceVariableNames: 'destino distancia peajes dto'	classVariableNames: ''	package: 'TP1'!!Destino methodsFor: 'accessing - computed' stamp: 'ds 10/11/2021 11:06'!costoPeajeCon: unChofer	|valorPeaje|		valorPeaje := ValorEstandard por: unChofer.		(destino includesSubstring: 'Retiro') ifTrue: [ 		valorPeaje := ValorPeajeEscalonado por: unChofer.	].		^valorPeaje valorPara: peajes .! !!Destino methodsFor: 'accessing - computed' stamp: 'ds 10/9/2021 18:22'!costoPorDistancia: unCostoKM 	^distancia * unCostoKM .! !!Destino methodsFor: 'accessing - computed' stamp: 'ds 10/9/2021 18:18'!aplicarDto: unValor 	^dto aplicarDto: unValor .! !!Destino methodsFor: 'class initialization' stamp: 'ds 10/11/2021 10:54'!destino: unDestinoNombre distancia: unKilometraje peajes: unaCantiadPasajes	destino := unDestinoNombre.	distancia := unKilometraje.	peajes := unaCantiadPasajes. 		dto := SinDescuento new.		(destino includesSubstring: 'Hospital') ifTrue: [ 		dto := DescuentoHospital new.	].! !!Destino methodsFor: 'accessing - testing' stamp: 'ds 10/9/2021 18:47'!seLlama: unDesinoNombre 	^destino = unDesinoNombre ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Destino class	instanceVariableNames: ''!!Destino class methodsFor: 'DS' stamp: 'ds 10/9/2021 13:31'!destino: unDestinoNombre distancia: unKilometraje peajes: unaCantiadPasajes	|result|	result := self new.	result destino: unDestinoNombre distancia: unKilometraje peajes: unaCantiadPasajes.	^result. ! !Object subclass: #SinDescuento	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!SinDescuento methodsFor: 'as yet unclassified' stamp: 'ds 10/9/2021 18:18'!aplicarDto: unValor 	^unValor ! !Object subclass: #ValorEstandard	instanceVariableNames: 'destinoNombre chofer'	classVariableNames: ''	package: 'TP1'!!ValorEstandard methodsFor: 'as yet unclassified' stamp: 'ds 10/11/2021 11:06'!valorPara: unNumeroDePeajes	^chofer costoPeajeCon: unNumeroDePeajes.! !!ValorEstandard methodsFor: 'as yet unclassified' stamp: 'ds 10/11/2021 00:58'!por: unChofer	chofer := unChofer.	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ValorEstandard class	instanceVariableNames: ''!!ValorEstandard class methodsFor: 'as yet unclassified' stamp: 'ds 10/11/2021 00:59'!por: unCostoPeaje	|r|	r := self new.	r por: unCostoPeaje.	^r.! !Object subclass: #ValorPeajeEscalonado	instanceVariableNames: 'destinoNombre chofer'	classVariableNames: ''	package: 'TP1'!!ValorPeajeEscalonado methodsFor: 'as yet unclassified' stamp: 'ds 10/11/2021 11:13'!valorPara: unNumeroDePeajes	unNumeroDePeajes > 2 ifTrue: [ 		^self calcularValorEscalonado. 	].	^self calcularValorEstandard: unNumeroDePeajes.! !!ValorPeajeEscalonado methodsFor: 'as yet unclassified' stamp: 'ds 10/11/2021 11:12'!calcularValorEscalonado 		^ (chofer costoPeajeCon: 1) +	((chofer costoPeajeCon: 1) * 0.5)! !!ValorPeajeEscalonado methodsFor: 'as yet unclassified' stamp: 'ds 10/11/2021 11:15'!calcularValorEstandard: unNumeroDePeajes	|v|	v := ValorEstandard por: chofer .	^v valorPara: unNumeroDePeajes ! !!ValorPeajeEscalonado methodsFor: 'as yet unclassified' stamp: 'ds 10/11/2021 00:51'!por: unChofer	chofer := unChofer.	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ValorPeajeEscalonado class	instanceVariableNames: ''!!ValorPeajeEscalonado class methodsFor: 'as yet unclassified' stamp: 'ds 10/11/2021 00:51'!por: unCostoPeaje	|r|	r := self new.	r por: unCostoPeaje.	^r.! !Object subclass: #Viaje	instanceVariableNames: 'chofer destino'	classVariableNames: ''	package: 'TP1'!!Viaje methodsFor: 'as yet unclassified' stamp: 'ds 10/11/2021 00:55'!precio	|p|	p := (chofer cobraHasta: destino) + (destino costoPeajeCon: chofer).	^ destino aplicarDto: p! !!Viaje methodsFor: 'as yet unclassified' stamp: 'ds 10/9/2021 13:13'!chofer	^chofer nombre! !!Viaje methodsFor: 'as yet unclassified' stamp: 'ds 10/9/2021 13:26'!hacia: aDestino con: aChofer 	destino := aDestino.	chofer := aChofer .! !!Viaje methodsFor: 'as yet unclassified' stamp: 'ds 10/9/2021 13:21'!min: otroViaje	(self precio < otroViaje precio) ifTrue: [		^self	].	^otroViaje .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Viaje class	instanceVariableNames: ''!!Viaje class methodsFor: 'as yet unclassified' stamp: 'ds 10/9/2021 13:26'!hacia: aDestino con: aChofer 	|r|	r := self new.	r hacia: aDestino con: aChofer .	^r.! !