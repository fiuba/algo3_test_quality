Object subclass: #MiString	instanceVariableNames: 'valor'	classVariableNames: ''	package: 'LearningSmalltalk-Model'!!MiString methodsFor: 'as yet unclassified' stamp: 'DS 4/14/2022 19:35'!valor: unValor 	valor := unValor .! !!MiString methodsFor: 'as yet unclassified' stamp: 'DS 4/14/2022 19:59'!lenMenosUno	^valor size - 1.! !!MiString methodsFor: 'as yet unclassified' stamp: 'DS 4/14/2022 19:38'!= otroMiString 	^valor = (otroMiString valor).! !!MiString methodsFor: 'as yet unclassified' stamp: 'DS 4/14/2022 19:37'!valor	^valor.! !!MiString methodsFor: 'as yet unclassified' stamp: 'DS 4/14/2022 19:37'!concatenar: otroMiString 	^MiString new valor: (valor, (otroMiString valor))! !TestCase subclass: #TestMiStrings	instanceVariableNames: ''	classVariableNames: ''	package: 'LearningSmalltalk-Test'!!TestMiStrings methodsFor: 'tests' stamp: 'DS 4/14/2022 19:52'!testStringConcatenados	|a b|	a := MiString new valor: 'A'.	b := MiString new valor: 'B'.		self assert: (a concatenar: b) equals: (MiString new valor: 'AB').! !!TestMiStrings methodsFor: 'tests' stamp: 'DS 4/14/2022 20:17'!testStringLongitudMenosUno	|a |	a := MiString new valor: 'a'.		"self assert: (a lenMenosUno) equals: 0."! !!TestMiStrings methodsFor: 'tests' stamp: 'DS 4/14/2022 19:56'!testStringConcatenadosMinusculas	|a b|	a := MiString new valor: 'aaaaa'.	b := MiString new valor: 'bbbbb'.		self assert: (a concatenar: b) equals: (MiString new valor: 'aaaaabbbbb').! !