Object subclass: #AlgoVid	instanceVariableNames: 'personas persona burbujas colegios'	classVariableNames: ''	package: 'tp1-000001'!!AlgoVid methodsFor: 'as yet unclassified' stamp: 'nico 5/18/2021 01:23'!initialize	personas := OrderedCollection new.	burbujas := OrderedCollection new.	colegios := OrderedCollection new.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'nicopin 5/20/2021 21:04'!contactoEstrechoEntre: unNombre y: otroNombre	|unaPersona otraPersona|	unaPersona := self buscarNombre: unNombre.	otraPersona := self buscarNombre: otroNombre.	unaPersona contactoEstrechoCon: otraPersona.	otraPersona contactoEstrechoCon: unaPersona.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'nicopin 5/20/2021 20:58'!buscarNombre: unNombre	^(personas detect: [ :p | (p nombre) = unNombre]ifNone: [NoSeEncontroElNombreError signal]).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'nico 5/17/2021 22:38'!nuevaBurbuja: unaBurbuja.	burbujas add: (Burbuja conNombre: unaBurbuja).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'nicopin 5/20/2021 21:06'!diagnosticoDe: unNombre	^(self buscarNombre:unNombre) diagnostico! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'nicopin 5/20/2021 21:49'!clasesPresencialesEn: unColegio	^(self buscarColegio: unColegio) hayClasesPresenciales.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'nicopin 5/21/2021 15:43'!estaVacunadx: unNombre	(self buscarNombre:unNombre) estaVacunadx.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'nicopin 5/20/2021 20:59'!agregarSintoma: unSintoma a: unNombre	^(self buscarNombre: unNombre) agregarSintoma: unSintoma.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'nicopin 5/20/2021 21:22'!agregarA: unNombre aLaBurbuja: unaBurbuja	|unaPersona|	unaPersona := self buscarNombre: unNombre.	(self buscarBurbuja: unaBurbuja) agregarA: unaPersona.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'nico 5/18/2021 01:27'!nuevoColegio: unColegio	colegios add: (Colegio conNombre: unColegio).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'nicopin 5/21/2021 15:43'!esPersonalEsencial: unNombre	(self buscarNombre:unNombre) esEsencial.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'nicopin 5/20/2021 21:47'!buscarBurbuja: unaBurbuja	^(burbujas detect: [ :burbuja | (burbuja nombre) = unaBurbuja]ifNone: [NoSeEncontroLaBurbujaError  signal]).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'nicopin 5/20/2021 21:48'!buscarColegio: unColegio	^(colegios detect: [ :colegio | (colegio nombre) = unColegio]ifNone: [NoSeEncontroElColegioError signal]).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'nicopin 5/21/2021 15:42'!esPersonaDeRiesgo: unNombre.	(self buscarNombre:unNombre) esDeRiesgo.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'nico 5/15/2021 16:44'!nuevaPersona: unNombre	personas add: (Persona conNombre: unNombre).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'nicopin 5/20/2021 21:07'!puedeCircular: unNombre	^(self buscarNombre:unNombre) puedeCircular.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'nicopin 5/20/2021 21:48'!agregarA: unaBurbuja alColegio: unColegio	|laBurbuja elColegio|	laBurbuja := (self buscarBurbuja: unaBurbuja).	elColegio := (self buscarColegio: unColegio).	elColegio agregarBurbuja: laBurbuja.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'nicopin 5/20/2021 21:45'!burbujaPinchada: unaBurbuja	^((self buscarBurbuja: unaBurbuja) estaPinchada).	! !Object subclass: #Burbuja	instanceVariableNames: 'nombre personas pinchada'	classVariableNames: ''	package: 'tp1-000001'!!Burbuja methodsFor: 'accessing' stamp: 'nico 5/17/2021 22:52'!agregarA: unaPersona	personas add: unaPersona.	! !!Burbuja methodsFor: 'accessing' stamp: 'nico 5/17/2021 22:44'!nombre	^nombre! !!Burbuja methodsFor: 'accessing' stamp: 'nicopin 5/20/2021 17:38'!initialize	personas := OrderedCollection new.! !!Burbuja methodsFor: 'accessing' stamp: 'nicopin 5/21/2021 17:31'!estaPinchada	|sePincho elPositivo|	sePincho := (personas anySatisfy: [:persona| persona diagnostico  = 'Positivo']).	sePincho ifFalse:[^sePincho].	elPositivo := self buscarPositivo.	personas do: [:persona| persona contactoEstrechoCon: elPositivo].	^sePincho			! !!Burbuja methodsFor: 'accessing' stamp: 'nicopin 5/21/2021 17:31'!buscarPositivo	 ^(personas detect: [:persona| persona diagnostico  = 'Positivo'])! !!Burbuja methodsFor: 'accessing' stamp: 'nico 5/17/2021 23:00'!establecerNombre: unNombre	nombre := unNombre	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Burbuja class	instanceVariableNames: ''!!Burbuja class methodsFor: 'as yet unclassified' stamp: 'nico 5/17/2021 22:23'!conNombre: unNombre|persona|persona:= self new.persona establecerNombre: unNombre.^persona! !Object subclass: #Colegio	instanceVariableNames: 'nombre personas pinchada burbujas'	classVariableNames: ''	package: 'tp1-000001'!!Colegio methodsFor: 'accessing' stamp: 'nicopin 5/21/2021 18:14'!hayClasesPresenciales	|burbujasPinchadas|	(burbujas isEmpty)ifTrue: [ZeroDivide signal]. 	burbujasPinchadas := self buscarBurbujasPinchadas.	^((((burbujasPinchadas size)*100) / (burbujas size)) <= 40)! !!Colegio methodsFor: 'accessing' stamp: 'nicopin 5/21/2021 18:14'!buscarBurbujasPinchadas	^(burbujas select: [ :burbuja | (burbuja estaPinchada)])! !!Colegio methodsFor: 'accessing' stamp: 'nico 5/18/2021 11:06'!nombre	^nombre! !!Colegio methodsFor: 'accessing' stamp: 'nico 5/18/2021 11:14'!initialize	burbujas := OrderedCollection new.! !!Colegio methodsFor: 'accessing' stamp: 'nico 5/18/2021 11:15'!agregarBurbuja: unaBurbuja	burbujas add: unaBurbuja.! !!Colegio methodsFor: 'accessing' stamp: 'nico 5/18/2021 11:06'!establecerNombre: unNombre	nombre := unNombre	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Colegio class	instanceVariableNames: ''!!Colegio class methodsFor: 'as yet unclassified' stamp: 'nico 5/18/2021 01:28'!conNombre: unNombre|colegio|colegio:= self new.colegio establecerNombre: unNombre.^colegio! !Object subclass: #DeRiesgo	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-000001'!!DeRiesgo methodsFor: 'accessing' stamp: 'nicopin 5/20/2021 23:42'!puedeCircular	^self subclassResponsibility.! !Object subclass: #Diagnostico	instanceVariableNames: 'sintomas'	classVariableNames: ''	package: 'tp1-000001'!!Diagnostico methodsFor: 'as yet unclassified' stamp: 'nicopin 5/20/2021 02:01'!contagia	^Sospechoso new.! !!Diagnostico methodsFor: 'as yet unclassified' stamp: 'nicopin 5/20/2021 02:01'!puedeCircular 	^false.! !!Diagnostico methodsFor: 'as yet unclassified' stamp: 'nico 5/18/2021 23:49'!diagnostico	^self subclassResponsibility.! !!Diagnostico methodsFor: 'as yet unclassified' stamp: 'nicopin 5/20/2021 02:03'!tuvoContactoCon: otroDiagnostico	^(otroDiagnostico contagia)! !Diagnostico subclass: #CovidNegativo	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-000001'!!CovidNegativo methodsFor: 'as yet unclassified' stamp: 'nicopin 5/19/2021 20:10'!contagia! !!CovidNegativo methodsFor: 'as yet unclassified' stamp: 'nico 5/19/2021 14:43'!puedeCircular 		^true! !!CovidNegativo methodsFor: 'as yet unclassified' stamp: 'nicopin 5/19/2021 20:01'!estado: losSintomas	(losSintomas isEmpty) ifFalse:[^Sospechoso new].	^self.! !!CovidNegativo methodsFor: 'as yet unclassified' stamp: 'nico 5/17/2021 12:16'!diagnostico	^'Negativo'! !Diagnostico subclass: #CovidPositivo	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-000001'!!CovidPositivo methodsFor: 'accessing' stamp: 'nico 5/18/2021 23:18'!tuvoContactoCon: otroDiagnostico	^self! !!CovidPositivo methodsFor: 'accessing' stamp: 'nicopin 5/19/2021 20:01'!estado: losSintomas	^self.! !!CovidPositivo methodsFor: 'as yet unclassified'!diagnostico	^'Positivo'! !Exception subclass: #ElSintomaYaEstaAgregadoError	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-000001'!DeRiesgo subclass: #EsDeRiesgo	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-000001'!!EsDeRiesgo methodsFor: 'accessing' stamp: 'nico 5/19/2021 14:32'!puedeCircular	^false.! !Object subclass: #Esencial	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-000001'!!Esencial methodsFor: 'accessing' stamp: 'nicopin 5/20/2021 23:38'!puedeCircular	^self subclassResponsibility.! !Esencial subclass: #EsEsencial	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-000001'!!EsEsencial methodsFor: 'accessing' stamp: 'nico 5/19/2021 14:32'!puedeCircular 	^true.! !Object subclass: #HistorialMedico	instanceVariableNames: 'circula vacunado esencial riesgo condicion estado sintomas'	classVariableNames: ''	package: 'tp1-000001'!!HistorialMedico methodsFor: 'as yet unclassified' stamp: 'nico 5/19/2021 14:42'!puedeCircular	^((vacunado puedeCircular | esencial puedeCircular) & ((condicion puedeCircular) & (riesgo puedeCircular))).! !!HistorialMedico methodsFor: 'as yet unclassified' stamp: 'nico 5/19/2021 12:55'!estaVacunadx	vacunado := PersonaVacunada new.! !!HistorialMedico methodsFor: 'as yet unclassified' stamp: 'nicopin 5/19/2021 20:35'!estado	^ (condicion)! !!HistorialMedico methodsFor: 'as yet unclassified' stamp: 'nicopin 5/20/2021 23:48'!initialize	sintomas :=  OrderedCollection new.	vacunado := PersonaSinVacunar new.	esencial := NoEsEsencial new.	riesgo := NoEsDeRiesgo new.	condicion := CovidNegativo new.! !!HistorialMedico methodsFor: 'as yet unclassified' stamp: 'nicopin 5/19/2021 20:49'!contactoEstrechoCon: otroHistorialMedico	condicion := condicion tuvoContactoCon: ((otroHistorialMedico)estado).	! !!HistorialMedico methodsFor: 'as yet unclassified' stamp: 'nico 5/19/2021 14:50'!diagnostico	^(condicion diagnostico)! !!HistorialMedico methodsFor: 'as yet unclassified' stamp: 'nico 5/19/2021 12:56'!esDeRiesgo	riesgo := EsDeRiesgo new.! !!HistorialMedico methodsFor: 'as yet unclassified' stamp: 'nicopin 5/20/2021 23:48'!esEsencial	esencial := EsEsencial new.! !!HistorialMedico methodsFor: 'as yet unclassified' stamp: 'nicopin 5/20/2021 01:48'!agregarSintoma: unSintoma	(sintomas anySatisfy: [:sintoma| (sintoma nombre) = unSintoma]) ifTrue: [ElSintomaYaEstaAgregadoError signal].	sintomas add: (Sintoma conNombre: unSintoma).		condicion := condicion estado:sintomas.! !DeRiesgo subclass: #NoEsDeRiesgo	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-000001'!!NoEsDeRiesgo methodsFor: 'accessing' stamp: 'nico 5/19/2021 14:32'!puedeCircular	^true.! !Esencial subclass: #NoEsEsencial	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-000001'!!NoEsEsencial methodsFor: 'accessing' stamp: 'nico 5/19/2021 14:32'!puedeCircular 	^false.! !Exception subclass: #NoSeEncontroElColegioError	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-000001'!Exception subclass: #NoSeEncontroElNombreError	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-000001'!Exception subclass: #NoSeEncontroLaBurbujaError	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-000001'!Object subclass: #Persona	instanceVariableNames: 'historial nombre'	classVariableNames: ''	package: 'tp1-000001'!!Persona methodsFor: 'as yet unclassified' stamp: 'nico 5/19/2021 14:34'!puedeCircular	^(historial puedeCircular).! !!Persona methodsFor: 'as yet unclassified' stamp: 'nico 5/19/2021 14:46'!diagnostico	^(historial diagnostico)! !!Persona methodsFor: 'as yet unclassified' stamp: 'nico 5/19/2021 15:17'!historialMedico	^historial.! !!Persona methodsFor: 'as yet unclassified' stamp: 'nicopin 5/21/2021 15:53'!esDeRiesgo	historial esDeRiesgo.! !!Persona methodsFor: 'as yet unclassified' stamp: 'nicopin 5/21/2021 17:42'!contactoEstrechoCon: otraPersona	historial contactoEstrechoCon: (otraPersona historialMedico). 	! !!Persona methodsFor: 'as yet unclassified' stamp: 'nicopin 5/21/2021 15:53'!esEsencial	historial esEsencial.! !!Persona methodsFor: 'as yet unclassified' stamp: 'nicopin 5/21/2021 18:25'!agregarSintoma: unSintoma	historial agregarSintoma: unSintoma.	! !!Persona methodsFor: 'as yet unclassified' stamp: 'ds 9/19/2021 21:12'!nombre	^nombre! !!Persona methodsFor: 'as yet unclassified' stamp: 'nicopin 5/21/2021 15:53'!estaVacunadx	historial estaVacunadx.! !!Persona methodsFor: 'as yet unclassified' stamp: 'nico 5/15/2021 17:10'!establecerNombre: unNombre	nombre := unNombre! !!Persona methodsFor: 'as yet unclassified' stamp: 'nicopin 5/20/2021 23:11'!initialize	historial := HistorialMedico new.	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Persona class	instanceVariableNames: ''!!Persona class methodsFor: 'as yet unclassified' stamp: 'nico 5/15/2021 16:42'!conNombre: unNombre|persona|persona:= self new.persona establecerNombre: unNombre.^persona! !Object subclass: #Sintoma	instanceVariableNames: 'sintomasHabituales nombre'	classVariableNames: ''	package: 'tp1-000001'!!Sintoma methodsFor: 'initialization'!initialize		sintomasHabituales := #('Fiebre' 'Tos' 'Cansancio').! !!Sintoma methodsFor: 'as yet unclassified' stamp: 'ds 9/19/2021 21:30'!esHabitual: unSintoma	^(sintomasHabituales anySatisfy: [:sintoma| sintoma ~= unSintoma]).	! !!Sintoma methodsFor: 'as yet unclassified'!nombre	^nombre.! !!Sintoma methodsFor: 'as yet unclassified'!establecerNombre: unNombre	nombre := unNombre! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Sintoma class	instanceVariableNames: ''!!Sintoma class methodsFor: 'as yet unclassified'!conNombre: unSintoma|sintoma|sintoma:= self new.sintoma establecerNombre: unSintoma.^sintoma! !Diagnostico subclass: #Sospechoso	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-000001'!!Sospechoso methodsFor: 'as yet unclassified' stamp: 'nico 5/15/2021 18:20'!diagnostico	^'Sospechoso'! !!Sospechoso methodsFor: 'as yet unclassified' stamp: 'nicopin 5/19/2021 20:01'!estado: losSintomas	|esHabitual|	esHabitual := losSintomas anySatisfy: [:sintoma| sintoma esHabitual: (sintoma nombre)].	((losSintomas size =3 & esHabitual) | (losSintomas size>3 )) ifTrue:[^CovidPositivo  new].	^self.! !Object subclass: #Vacunado	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-000001'!!Vacunado methodsFor: 'accessing' stamp: 'nicopin 5/20/2021 23:41'!puedeCircular 	^self subclassResponsibility.! !Vacunado subclass: #PersonaSinVacunar	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-000001'!!PersonaSinVacunar methodsFor: 'as yet unclassified' stamp: 'nico 5/19/2021 14:31'!puedeCircular 	^false.! !Vacunado subclass: #PersonaVacunada	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-000001'!!PersonaVacunada methodsFor: 'as yet unclassified' stamp: 'nico 5/19/2021 14:31'!puedeCircular	^true.	! !TestCase subclass: #PruebasAlgovid	instanceVariableNames: 'burbuja1 burbuja2 burbuja3 burbuja4 persona1 persona2 persona3 colegio1 algovid'	classVariableNames: ''	package: 'tp1-000001-Tests'!!PruebasAlgovid methodsFor: 'tests' stamp: 'nicopin 5/20/2021 01:30'!test06NoSeEncontroPersonaEnContactoEstrechoElevaExcepcion	algovid nuevaPersona: 'Nicopin'.	self should: [algovid contactoEstrechoEntre: 'Juan' y: 'Nicopin'] raise: NoSeEncontroElNombreError.! !!PruebasAlgovid methodsFor: 'tests' stamp: 'nicopin 5/20/2021 17:50'!test11PersonaVacunadaYDeRiesgoNoCircula	algovid nuevaPersona: 'nico'.	algovid estaVacunadx:'nico'.	algovid esPersonaDeRiesgo: 'nico'.	self assert: (algovid diagnosticoDe: 'nico') equals: 'Negativo'. 	self deny: (algovid puedeCircular: 'nico').! !!PruebasAlgovid methodsFor: 'tests' stamp: 'nicopin 5/20/2021 01:16'!test02NoSeEncontroBurbujaElevaUnaExcepcion	algovid nuevoColegio: 'Fiuba'.	algovid nuevaBurbuja: 'la filita'.	self should: [algovid agregarA: 'The little row' alColegio: 'Fiuba'] raise: NoSeEncontroLaBurbujaError.! !!PruebasAlgovid methodsFor: 'tests' stamp: 'nicopin 5/20/2021 17:51'!test12AgregoUnaPersonaEsencialYCircula	algovid nuevaPersona: 'nico'.	algovid esPersonalEsencial:'nico'.	self assert: (algovid diagnosticoDe: 'nico') equals: 'Negativo'. 	self assert: (algovid puedeCircular: 'nico').! !!PruebasAlgovid methodsFor: 'tests' stamp: 'nicopin 5/20/2021 17:50'!test10AgregoUnaPersonaVacunadxYCircula	algovid nuevaPersona: 'nico'.	algovid estaVacunadx:'nico'.	self assert: (algovid diagnosticoDe: 'nico') equals: 'Negativo'. 	self assert: (algovid puedeCircular: 'nico').! !!PruebasAlgovid methodsFor: 'tests' stamp: 'nicopin 5/20/2021 01:33'!test07NoSeEncontroColegioEnClasesPresencialesElevaUnaExcepcion	self should: [algovid clasesPresencialesEn: 'UADE'] raise: NoSeEncontroElColegioError.! !!PruebasAlgovid methodsFor: 'tests' stamp: 'nicopin 5/20/2021 17:57'!test15ContactoEstrechoEntrePositivoYNegativoDaPositivoYSospechoso.	algovid nuevaPersona: 'nico'.	algovid nuevaPersona: 'dani'.	algovid agregarSintoma: 'Fiebre' a: 'nico'.	algovid agregarSintoma: 'Dolor de Cabeza' a: 'nico'.	algovid agregarSintoma: 'Dolor de garganta' a: 'nico'.	self assert: (algovid diagnosticoDe: 'nico') equals: 'Positivo'. 	self assert: (algovid diagnosticoDe: 'dani') equals: 'Negativo'.	algovid contactoEstrechoEntre: 'nico' y: 'dani'.	self assert: (algovid diagnosticoDe: 'nico') equals: 'Positivo'. 	self assert: (algovid diagnosticoDe: 'dani') equals: 'Sospechoso'.! !!PruebasAlgovid methodsFor: 'tests' stamp: 'ds 9/19/2021 21:13'!test09AgregoUnaPersonaDeRiesgoYNoCircula	algovid nuevaPersona: 'nico'.	algovid esPersonaDeRiesgo:'nico'.	self assert: (algovid diagnosticoDe: 'nico') equals: 'Negativo'. 	self deny: (algovid puedeCircular: 'nico').! !!PruebasAlgovid methodsFor: 'tests' stamp: 'nicopin 5/20/2021 18:08'!test17AgregoCuatroBurbujasDosPinchadasAUnColegioYNoHayClases.	algovid nuevaBurbuja: 'Estudiantes fiuba'.	algovid nuevaBurbuja: 'Estudiantes uade'.	algovid nuevaBurbuja: 'Estudiantes fadu'.	algovid nuevaBurbuja: 'Estudiantes unqui'.	algovid nuevoColegio: 'Universidades'.	algovid nuevaPersona: 'nico'.	algovid nuevaPersona: 'dani'.		algovid agregarA: 'nico' aLaBurbuja: 'Estudiantes fiuba'.	algovid agregarA: 'dani' aLaBurbuja: 'Estudiantes fadu'.	algovid agregarSintoma: 'Fiebre' a: 'nico'.	algovid agregarSintoma: 'Cansancio' a: 'nico'.	algovid agregarSintoma: 'Dolor de cabeza' a: 'nico'.		self assert: (algovid diagnosticoDe: 'nico') equals: 'Positivo'. 		algovid agregarSintoma: 'Fiebre' a: 'dani'.	algovid agregarSintoma: 'Cansancio' a: 'dani'.	algovid agregarSintoma: 'Dolor de cabeza' a: 'dani'.		self assert: (algovid diagnosticoDe: 'nico') equals: 'Positivo'. 		algovid agregarA: 'Estudiantes fiuba' alColegio: 'Universidades'.	self assert: (algovid burbujaPinchada:'Estudiantes fiuba').	algovid agregarA: 'Estudiantes uade' alColegio: 'Universidades'.	self deny: (algovid burbujaPinchada:'Estudiantes uade').	algovid agregarA: 'Estudiantes fadu' alColegio: 'Universidades'.	self assert: (algovid burbujaPinchada:'Estudiantes fadu').	algovid agregarA: 'Estudiantes unqui' alColegio: 'Universidades'.	self deny: (algovid burbujaPinchada:'Estudiantes unqui').	self deny: (algovid clasesPresencialesEn:'Universidades').! !!PruebasAlgovid methodsFor: 'tests' stamp: 'nicopin 5/20/2021 18:04'!test14AgregoUnaBurbujaConUnSospechosoYEstaPinchada.	algovid nuevaBurbuja: 'Estudiantes fiuba'.	algovid nuevaPersona: 'nico'.	algovid agregarA: 'nico' aLaBurbuja: 'Estudiantes fiuba'.	algovid agregarSintoma: 'Fiebre' a: 'nico'.	algovid agregarSintoma: 'Cansancio' a: 'nico'.	algovid agregarSintoma: 'Dolor de cabeza' a: 'nico'.	self assert: (algovid diagnosticoDe: 'nico') equals: 'Positivo'. 	self assert: (algovid burbujaPinchada:'Estudiantes fiuba').! !!PruebasAlgovid methodsFor: 'tests' stamp: 'nicopin 5/20/2021 17:54'!test13AgregoUnaBurbujaYNoEstaPinchada.	algovid nuevaBurbuja: 'Estudiantes fiuba'.	algovid nuevaPersona: 'nico'.	algovid agregarA: 'nico' aLaBurbuja: 'Estudiantes fiuba'.	self assert: (algovid diagnosticoDe: 'nico') equals: 'Negativo'. 	self deny: (algovid burbujaPinchada:'Estudiantes fiuba').! !!PruebasAlgovid methodsFor: 'tests' stamp: 'nicopin 5/20/2021 01:29'!test04NoSeEncontroPersonaPuedeCircularElevaUnaExcepcion	algovid nuevaPersona: 'Nicopin'.	self should: [algovid puedeCircular: 'The little row'] raise: NoSeEncontroElNombreError.! !!PruebasAlgovid methodsFor: 'tests' stamp: 'nicopin 5/20/2021 01:08'!setUp	algovid := AlgoVid new.! !!PruebasAlgovid methodsFor: 'tests' stamp: 'nicopin 5/20/2021 01:20'!test03NoSeEncontroPersonaEstaVacunadaElevaUnaExcepcion	algovid nuevaPersona: 'Nicopin'.	self should: [algovid estaVacunadx: 'The little row'] raise: NoSeEncontroElNombreError.! !!PruebasAlgovid methodsFor: 'tests' stamp: 'ds 9/19/2021 19:30'!test08AgregoUnaPersonaSospechosaDeCovidYNoCircula"	algovid nuevaPersona: 'nico'.	algovid estaVacunadx: 'nico'.	algovid agregarSintoma: 'Diarrea' a: 'nico'.	algovid agregarSintoma: 'Dolor de Cabeza' a: 'nico'.	algovid agregarSintoma: 'Dolor de garganta' a: 'nico'.	self assert: (algovid diagnosticoDe: 'nico') equals: 'Sospechoso'. 	self deny: (algovid puedeCircular: 'nico')."! !!PruebasAlgovid methodsFor: 'tests' stamp: 'nicopin 5/20/2021 01:32'!test01NoSeEncontroColegioEnAgregarBurbujaElevaUnaExcepcion	algovid nuevaBurbuja: 'La filita'.	self should: [algovid agregarA: 'La filita' alColegio: 'Fiuba'] raise: NoSeEncontroElColegioError.! !!PruebasAlgovid methodsFor: 'tests' stamp: 'nicopin 5/20/2021 01:29'!test05NoSeEncontroPersonaDiagnosticoElevaExcepcion	algovid nuevaPersona: 'Nicopin'.	self should: [algovid diagnosticoDe: 'Juan'] raise: NoSeEncontroElNombreError.! !!PruebasAlgovid methodsFor: 'tests' stamp: 'nicopin 5/20/2021 18:02'!test16AgregoCuatroBurbujasAUnColegioYHayClases.	algovid nuevaBurbuja: 'Estudiantes fiuba'.	algovid nuevaBurbuja: 'Estudiantes uade'.	algovid nuevaBurbuja: 'Estudiantes fadu'.	algovid nuevaBurbuja: 'Estudiantes unqui'.	algovid nuevoColegio: 'Universidades'.	algovid agregarA: 'Estudiantes fiuba' alColegio: 'Universidades'.	algovid agregarA: 'Estudiantes uade' alColegio: 'Universidades'.	algovid agregarA: 'Estudiantes fadu' alColegio: 'Universidades'.	algovid agregarA: 'Estudiantes unqui' alColegio: 'Universidades'.	self assert: (algovid clasesPresencialesEn:'Universidades').! !TestCase subclass: #PruebasBurbuja	instanceVariableNames: 'burbuja1 burbuja2 burbuja3 persona1 persona2 persona3'	classVariableNames: ''	package: 'tp1-000001-Tests'!!PruebasBurbuja methodsFor: 'running' stamp: 'nicopin 5/20/2021 18:13'!test07UnaPersonaPositivaEnDosBurbujasPinchaLasDos	burbuja1 agregarA: persona1.	burbuja2 agregarA: persona1.	persona1 agregarSintoma: 'Dolor de garganta'.  	persona1 agregarSintoma: 'Dolor de cabeza'. 	persona1 agregarSintoma: 'Fiebre'.	self assert: (persona1 diagnostico) equals: 'Positivo'.	self assert: burbuja1 estaPinchada equals: true.	self assert: burbuja2 estaPinchada equals: true.! !!PruebasBurbuja methodsFor: 'running' stamp: 'nicopin 5/19/2021 22:58'!test06BurbujaSePinchaTodosPositivosQuedanPositivos	burbuja1 agregarA: persona1.	burbuja1 agregarA: persona2.	burbuja1 agregarA: persona3.	persona1 agregarSintoma: 'Dolor de garganta'.  	persona1 agregarSintoma: 'Dolor de cabeza'. 	persona1 agregarSintoma: 'Fiebre'.	persona2 agregarSintoma: 'Dolor de garganta'.  	persona2 agregarSintoma: 'Dolor de cabeza'. 	persona2 agregarSintoma: 'Fiebre'.	persona3 agregarSintoma: 'Dolor de garganta'.  	persona3 agregarSintoma: 'Dolor de cabeza'. 	persona3 agregarSintoma: 'Fiebre'.	self assert: (persona1 diagnostico) equals: 'Positivo'.	self assert: (persona1 diagnostico) equals: 'Positivo'.	self assert: (persona1 diagnostico) equals: 'Positivo'.	self assert: burbuja1 estaPinchada equals: true.	self assert: persona1 diagnostico equals: 'Positivo'.	self assert: persona2 diagnostico equals: 'Positivo'.	self assert: persona3 diagnostico equals: 'Positivo'.! !!PruebasBurbuja methodsFor: 'running' stamp: 'nicopin 5/19/2021 22:54'!test04BurbujaNoEstaPinchadaAlSerCreada	burbuja1 agregarA: persona1.	burbuja1 agregarA: persona2.	burbuja1 estaPinchada.	self assert: burbuja1 estaPinchada equals: false.! !!PruebasBurbuja methodsFor: 'running' stamp: 'nicopin 5/19/2021 22:53'!test03BurbujaNoSePinchaConUnSospechoso	burbuja1 agregarA: persona1.	burbuja1 agregarA: persona2.	persona1 agregarSintoma: 'Dolor de garganta'.  	persona1 agregarSintoma: 'Dolor de cabeza'. 	persona1 agregarSintoma: 'Diarrea'.	burbuja1 estaPinchada.	self assert: (persona1 diagnostico) equals: 'Sospechoso'.	self assert: burbuja1 estaPinchada equals: false.! !!PruebasBurbuja methodsFor: 'running' stamp: 'nicopin 5/19/2021 22:52'!test02BurbujaSePinchaConUnPositivo	burbuja1 agregarA: persona1.	burbuja1 agregarA: persona2.	persona1 agregarSintoma: 'Dolor de garganta'.  	persona1 agregarSintoma: 'Dolor de cabeza'. 	persona1 agregarSintoma: 'Diarrea'.	persona1 agregarSintoma: 'Cansancio'.	burbuja1 estaPinchada.	self assert: (persona1 diagnostico) equals: 'Positivo'.	self assert: burbuja1 estaPinchada equals: true.! !!PruebasBurbuja methodsFor: 'running' stamp: 'nicopin 5/19/2021 22:51'!test01BurbujaDevuelveElNombreAsignado	burbuja1 establecerNombre: 'Estudiantes'.	self assert: burbuja1 nombre equals: 'Estudiantes'.	! !!PruebasBurbuja methodsFor: 'running' stamp: 'nicopin 5/19/2021 22:56'!test05LaBurbujaSePinchoTodosSonSospechososMenosElQueLaPincho	burbuja1 agregarA: persona1.	burbuja1 agregarA: persona2.	burbuja1 agregarA: persona3.	persona1 agregarSintoma: 'Dolor de garganta'.  	persona1 agregarSintoma: 'Dolor de cabeza'. 	persona1 agregarSintoma: 'Diarrea'.	persona1 agregarSintoma: 'Cansancio'.	self assert: (persona1 diagnostico) equals: 'Positivo'.	self assert: burbuja1 estaPinchada equals: true.	self assert: persona1 diagnostico equals: 'Positivo'.	self assert: persona2 diagnostico equals: 'Sospechoso'.	self assert: persona3 diagnostico equals: 'Sospechoso'.! !!PruebasBurbuja methodsFor: 'running' stamp: 'nicopin 5/19/2021 22:17'!setUp	burbuja1 := Burbuja new.	burbuja2 := Burbuja new.	persona1:= Persona new.	persona2:= Persona new.	persona3:= Persona new.	! !TestCase subclass: #PruebasColegio	instanceVariableNames: 'persona persona1 persona2 burbuja1 burbuja2 burbuja3 persona3 colegio1 burbuja4'	classVariableNames: ''	package: 'tp1-000001-Tests'!!PruebasColegio methodsFor: 'running' stamp: 'nicopin 5/19/2021 23:47'!test04MasDelCuarentaPorcientoDeBurbujasPinchadasNoHayClases	burbuja1 agregarA: persona1.	burbuja2 agregarA: persona2.	colegio1 agregarBurbuja: burbuja1.	colegio1 agregarBurbuja: burbuja2.	colegio1 agregarBurbuja: burbuja3.	colegio1 agregarBurbuja: burbuja4.	persona1 agregarSintoma: 'Dolor de garganta'.  	persona1 agregarSintoma: 'Dolor de cabeza'. 	persona1 agregarSintoma: 'Fiebre'.	persona2 agregarSintoma: 'Dolor de garganta'.  	persona2 agregarSintoma: 'Dolor de cabeza'. 	persona2 agregarSintoma: 'Fiebre'.	self assert: burbuja1 estaPinchada equals: true.	self assert: burbuja2 estaPinchada equals: true.	self assert: colegio1 hayClasesPresenciales equals: false.		! !!PruebasColegio methodsFor: 'running' stamp: 'nicopin 5/20/2021 17:32'!test01ColegioDevuelveElNombreAsignado	colegio1 establecerNombre: 'IMPA'.	self assert: colegio1 nombre equals: 'IMPA'.		! !!PruebasColegio methodsFor: 'running' stamp: 'nicopin 5/19/2021 23:45'!test03MasDelCuarentaPorcientoDeBurbujasPinchadasHayClases	burbuja1 agregarA: persona1.	colegio1 agregarBurbuja: burbuja1.	colegio1 agregarBurbuja: burbuja2.	colegio1 agregarBurbuja: burbuja3.	colegio1 agregarBurbuja: burbuja4.	persona1 agregarSintoma: 'Dolor de garganta'.  	persona1 agregarSintoma: 'Dolor de cabeza'. 	persona1 agregarSintoma: 'Fiebre'.	self assert: burbuja1 estaPinchada equals: true.	self assert: colegio1 hayClasesPresenciales equals: true.		! !!PruebasColegio methodsFor: 'running' stamp: 'nicopin 5/19/2021 23:26'!test02AgregoTresBurbujasHayClasesPresenciales	colegio1 agregarBurbuja: burbuja1.	colegio1 agregarBurbuja: burbuja2.	colegio1 agregarBurbuja: burbuja3.	self assert: colegio1 hayClasesPresenciales equals: true.		! !!PruebasColegio methodsFor: 'running' stamp: 'nicopin 5/20/2021 00:15'!test05ColegioSinBurbujasElevaUnaExcepcion	self should: [colegio1 hayClasesPresenciales] raise: ZeroDivide.		! !!PruebasColegio methodsFor: 'running' stamp: 'nicopin 5/19/2021 23:42'!setUp	burbuja1 := Burbuja new.	burbuja2 := Burbuja new.	burbuja3 := Burbuja new.	burbuja4 := Burbuja new.	persona1:= Persona new.	persona2:= Persona new.	persona3:= Persona new.	colegio1 := Colegio new.	! !TestCase subclass: #PruebasHistorialMedico	instanceVariableNames: 'historialMedico1 historialMedico2'	classVariableNames: ''	package: 'tp1-000001-Tests'!!PruebasHistorialMedico methodsFor: 'running' stamp: 'nicopin 5/19/2021 20:12'!setUp	historialMedico1 := HistorialMedico new.	historialMedico2 := HistorialMedico new.! !!PruebasHistorialMedico methodsFor: 'tests' stamp: 'nicopin 5/19/2021 20:44'!test08PersonaSospechosaContactoConPositivoDaSospechoso	historialMedico2 agregarSintoma: 'Dolor de garganta'.  	historialMedico2 agregarSintoma: 'Dolor de cabeza'. 	historialMedico2 agregarSintoma: 'Fiebre'.	historialMedico1 agregarSintoma: 'Dolor de garganta'.  	historialMedico1 agregarSintoma: 'Dolor de cabeza'. 	historialMedico1 agregarSintoma: 'Diarrea'.	self assert: (historialMedico2 diagnostico) equals: 'Positivo'.	self assert: (historialMedico1 diagnostico) equals: 'Sospechoso'.	historialMedico1 contactoEstrechoCon: historialMedico2.	self assert: (historialMedico1 diagnostico) equals: 'Sospechoso'.	self assert: (historialMedico2 diagnostico) equals: 'Positivo'.! !!PruebasHistorialMedico methodsFor: 'tests' stamp: 'nicopin 5/19/2021 20:29'!test04PersonaNegativaContactoConSospechosoDaSospechoso	historialMedico2 agregarSintoma: 'Dolor de garganta'.  	historialMedico2 agregarSintoma: 'Dolor de cabeza'. 	historialMedico2 agregarSintoma: 'Diarrea'.	self assert: (historialMedico1 diagnostico) equals: 'Negativo'.	self assert: (historialMedico2 diagnostico) equals: 'Sospechoso'.	historialMedico1 contactoEstrechoCon: historialMedico2.	self assert: (historialMedico1 diagnostico) equals: 'Sospechoso'.	self assert: (historialMedico2 diagnostico) equals: 'Sospechoso'.! !!PruebasHistorialMedico methodsFor: 'tests' stamp: 'nicopin 5/19/2021 20:27'!test03PersonaPositivaContactoConPositivaDaPositiva	historialMedico1 agregarSintoma: 'Dolor de garganta'.  	historialMedico1 agregarSintoma: 'Dolor de cabeza'. 	historialMedico1 agregarSintoma: 'Fiebre'.	historialMedico2 agregarSintoma: 'Dolor de garganta'.  	historialMedico2 agregarSintoma: 'Dolor de cabeza'. 	historialMedico2 agregarSintoma: 'Fiebre'.	self assert: (historialMedico1 diagnostico) equals: 'Positivo'.	self assert: (historialMedico1 diagnostico) equals: 'Positivo'.	historialMedico1 contactoEstrechoCon: historialMedico2.	self assert: (historialMedico1 diagnostico) equals: 'Positivo'.	self assert: (historialMedico1 diagnostico) equals: 'Positivo'.! !!PruebasHistorialMedico methodsFor: 'tests' stamp: 'nicopin 5/19/2021 20:26'!test02PersonaSospechosoContactoConSospechosoDaSospechoso	historialMedico1 agregarSintoma: 'Dolor de garganta'.  	historialMedico1 agregarSintoma: 'Dolor de cabeza'. 	historialMedico1 agregarSintoma: 'Diarrea'.	historialMedico2 agregarSintoma: 'Dolor de garganta'.  	historialMedico2 agregarSintoma: 'Dolor de cabeza'. 	historialMedico2 agregarSintoma: 'Diarrea'.	self assert: (historialMedico1 diagnostico) equals: 'Sospechoso'.	self assert: (historialMedico1 diagnostico) equals: 'Sospechoso'.	historialMedico1 contactoEstrechoCon: historialMedico2.	self assert: (historialMedico1 diagnostico) equals: 'Sospechoso'.	self assert: (historialMedico1 diagnostico) equals: 'Sospechoso'.! !!PruebasHistorialMedico methodsFor: 'tests' stamp: 'nicopin 5/19/2021 20:24'!test01PersonaConCovidNegativoContactoConNegativoDaNegativo	self assert: (historialMedico1 diagnostico) equals: 'Negativo'.	self assert: (historialMedico1 diagnostico) equals: 'Negativo'.	historialMedico1 contactoEstrechoCon: historialMedico2.	self assert: (historialMedico1 diagnostico) equals: 'Negativo'.	self assert: (historialMedico1 diagnostico) equals: 'Negativo'.! !!PruebasHistorialMedico methodsFor: 'tests' stamp: 'nicopin 5/19/2021 20:43'!test08PersonaPositivaContactoConSospechosoDaSospechoso	historialMedico2 agregarSintoma: 'Dolor de garganta'.  	historialMedico2 agregarSintoma: 'Dolor de cabeza'. 	historialMedico2 agregarSintoma: 'Fiebre'.	historialMedico1 agregarSintoma: 'Dolor de garganta'.  	historialMedico1 agregarSintoma: 'Dolor de cabeza'. 	historialMedico1 agregarSintoma: 'Diarrea'.	self assert: (historialMedico2 diagnostico) equals: 'Positivo'.	self assert: (historialMedico1 diagnostico) equals: 'Sospechoso'.	historialMedico2 contactoEstrechoCon: historialMedico1.	self assert: (historialMedico1 diagnostico) equals: 'Sospechoso'.	self assert: (historialMedico2 diagnostico) equals: 'Positivo'.! !!PruebasHistorialMedico methodsFor: 'tests' stamp: 'nicopin 5/20/2021 01:44'!test09AgregarUnSintomaQueYaEstaElevaUnaExcepcion	historialMedico1 agregarSintoma: 'Tos'.	historialMedico1 agregarSintoma: 'Fiebre'.	self should: [historialMedico1 agregarSintoma: 'Tos'] raise: ElSintomaYaEstaAgregadoError.! !!PruebasHistorialMedico methodsFor: 'tests' stamp: 'nicopin 5/19/2021 20:37'!test06PersonaNegativaContactoConPositivoDaSospechoso	historialMedico2 agregarSintoma: 'Dolor de garganta'.  	historialMedico2 agregarSintoma: 'Dolor de cabeza'. 	historialMedico2 agregarSintoma: 'Fiebre'.	self assert: (historialMedico1 diagnostico) equals: 'Negativo'.	self assert: (historialMedico2 diagnostico) equals: 'Positivo'.	historialMedico1 contactoEstrechoCon: historialMedico2.	self assert: (historialMedico1 diagnostico) equals: 'Sospechoso'.	self assert: (historialMedico2 diagnostico) equals: 'Positivo'.! !TestCase subclass: #PruebasPersona	instanceVariableNames: 'persona persona1 persona2'	classVariableNames: ''	package: 'tp1-000001-Tests'!!PruebasPersona methodsFor: 'running' stamp: 'nico 5/19/2021 00:47'!setUp	persona1 := Persona new.	persona2 := Persona new.! !!PruebasPersona methodsFor: 'tests' stamp: 'nico 5/19/2021 00:48'!test04UnaPersonaRecienRegistradaNoPuedeCircular	self assert: persona1 puedeCircular equals: false.! !!PruebasPersona methodsFor: 'tests' stamp: 'nico 5/19/2021 00:48'!test06UnaPersonaEsencialPuedeCircular	persona1 esEsencial.	self assert: persona1 puedeCircular equals: true.! !!PruebasPersona methodsFor: 'tests' stamp: 'nico 5/19/2021 16:07'!test09UnaPersonaVacunadaPeroSospechosaNoPuedeCircular	persona1 estaVacunadx.	persona1 agregarSintoma: 'Dolor de garganta'.  	persona1 agregarSintoma: 'Dolor de cabeza'. 	persona1 agregarSintoma: 'Diarrea'.	persona1 agregarSintoma: 'Cansancio'.		self assert: persona1 puedeCircular equals: false.! !!PruebasPersona methodsFor: 'tests' stamp: 'nico 5/19/2021 00:48'!test03UnaPersonaDeRiesgoNoPuedeCircular	persona1 esDeRiesgo.	self assert: persona1 puedeCircular equals: false.! !!PruebasPersona methodsFor: 'tests' stamp: 'nico 5/19/2021 00:48'!test02UnaPersonaVacunadaPuedeCircular	persona1 estaVacunadx .	self assert: persona1 puedeCircular equals: true.	! !!PruebasPersona methodsFor: 'tests' stamp: 'nicopin 5/20/2021 17:41'!test13UnaPersonaSospechosaVacunadaYEsencialNoPuedeCircular	persona1 estaVacunadx.	persona1 esEsencial.	persona1 agregarSintoma: 'Dolor de garganta'.  	persona1 agregarSintoma: 'Dolor de cabeza'. 	persona1 agregarSintoma: 'Diarrea'.	self assert: (persona1 diagnostico) equals: 'Sospechoso'.	self assert: persona1 puedeCircular equals: false.! !!PruebasPersona methodsFor: 'tests' stamp: 'nico 5/19/2021 16:36'!test11UnaPersonaPositivaDeCovidNoPuedeCircular	persona1 agregarSintoma: 'Dolor de garganta'.  	persona1 agregarSintoma: 'Dolor de cabeza'. 	persona1 agregarSintoma: 'Fiebre'.	self assert: (persona1 diagnostico) equals: 'Positivo'.	self assert: persona1 puedeCircular equals: false.! !!PruebasPersona methodsFor: 'tests' stamp: 'nicopin 5/21/2021 20:09'!test01PersonaDevuelveElNombreAsignado	persona1 establecerNombre: 'Nico'.	self assert: persona1 nombre equals: 'Nico'.	! !!PruebasPersona methodsFor: 'tests' stamp: 'nico 5/19/2021 18:50'!test17PersonaConCovidNegativoContactoConCovidNegativoDaNegativo	persona1 contactoEstrechoCon: persona2.	self assert: (persona1 diagnostico) equals: 'Negativo'.	self assert: (persona2 diagnostico) equals: 'Negativo'.! !!PruebasPersona methodsFor: 'tests' stamp: 'nico 5/19/2021 00:49'!test08UnaPersonaVacunadaPeroDeRiesgoNoPuedeCircular	persona1 esDeRiesgo.	persona1 estaVacunadx.	self assert: persona1 puedeCircular equals: false.! !!PruebasPersona methodsFor: 'tests' stamp: 'nico 5/19/2021 18:49'!test15PersonaConTresSintomasEsSospechoso	persona1 agregarSintoma: 'Dolor de garganta'.  	persona1 agregarSintoma: 'Dolor de cabeza'. 	persona1 agregarSintoma: 'Diarrea'.	self assert: (persona1 diagnostico) equals: 'Sospechoso'.	self assert: persona1 puedeCircular equals: false.! !!PruebasPersona methodsFor: 'tests' stamp: 'nico 5/19/2021 16:34'!test10UnaPersonaVacunadaPeroDeRiesgoNoPuedeCircular	persona1 estaVacunadx.	persona1 esDeRiesgo.		self assert: persona1 puedeCircular equals: false.! !!PruebasPersona methodsFor: 'tests' stamp: 'nicopin 5/20/2021 17:42'!test13UnaPersonaDeRiesgoVacunadaYEsencialNoPuedeCircular	persona1 estaVacunadx.	persona1 esEsencial.	persona1 esDeRiesgo.	self assert: (persona1 diagnostico) equals: 'Negativo'.	self assert: persona1 puedeCircular equals: false.! !!PruebasPersona methodsFor: 'tests' stamp: 'nico 5/19/2021 00:48'!test05UnaPersonaRecienRegistradaNoTieneCovid	self assert: persona1 diagnostico equals: 'Negativo'.! !!PruebasPersona methodsFor: 'tests' stamp: 'nico 5/19/2021 16:36'!test12UnaPersonaPositivaDeCovidVacunadaYEsencialNoPuedeCircular	persona1 estaVacunadx.	persona1 esEsencial.	persona1 agregarSintoma: 'Dolor de garganta'.  	persona1 agregarSintoma: 'Dolor de cabeza'. 	persona1 agregarSintoma: 'Fiebre'.	self assert: (persona1 diagnostico) equals: 'Positivo'.	self assert: persona1 puedeCircular equals: false.! !!PruebasPersona methodsFor: 'tests' stamp: 'nico 5/19/2021 18:49'!test16PersonaConCuatroSintomasEsSospechoso	persona1 agregarSintoma: 'Dolor de garganta'.  	persona1 agregarSintoma: 'Dolor de cabeza'. 	persona1 agregarSintoma: 'Diarrea'.	persona1 agregarSintoma: 'Cansancio'.	self assert: (persona1 diagnostico) equals: 'Positivo'.	self assert: persona1 puedeCircular equals: false.! !